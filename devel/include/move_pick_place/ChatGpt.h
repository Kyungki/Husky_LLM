// Generated by gencpp from file move_pick_place/ChatGpt.msg
// DO NOT EDIT!


#ifndef MOVE_PICK_PLACE_MESSAGE_CHATGPT_H
#define MOVE_PICK_PLACE_MESSAGE_CHATGPT_H

#include <ros/service_traits.h>


#include <move_pick_place/ChatGptRequest.h>
#include <move_pick_place/ChatGptResponse.h>


namespace move_pick_place
{

struct ChatGpt
{

typedef ChatGptRequest Request;
typedef ChatGptResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ChatGpt
} // namespace move_pick_place


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::move_pick_place::ChatGpt > {
  static const char* value()
  {
    return "e0e4e53d8b56a3ee57408d4081b2c754";
  }

  static const char* value(const ::move_pick_place::ChatGpt&) { return value(); }
};

template<>
struct DataType< ::move_pick_place::ChatGpt > {
  static const char* value()
  {
    return "move_pick_place/ChatGpt";
  }

  static const char* value(const ::move_pick_place::ChatGpt&) { return value(); }
};


// service_traits::MD5Sum< ::move_pick_place::ChatGptRequest> should match
// service_traits::MD5Sum< ::move_pick_place::ChatGpt >
template<>
struct MD5Sum< ::move_pick_place::ChatGptRequest>
{
  static const char* value()
  {
    return MD5Sum< ::move_pick_place::ChatGpt >::value();
  }
  static const char* value(const ::move_pick_place::ChatGptRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::move_pick_place::ChatGptRequest> should match
// service_traits::DataType< ::move_pick_place::ChatGpt >
template<>
struct DataType< ::move_pick_place::ChatGptRequest>
{
  static const char* value()
  {
    return DataType< ::move_pick_place::ChatGpt >::value();
  }
  static const char* value(const ::move_pick_place::ChatGptRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::move_pick_place::ChatGptResponse> should match
// service_traits::MD5Sum< ::move_pick_place::ChatGpt >
template<>
struct MD5Sum< ::move_pick_place::ChatGptResponse>
{
  static const char* value()
  {
    return MD5Sum< ::move_pick_place::ChatGpt >::value();
  }
  static const char* value(const ::move_pick_place::ChatGptResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::move_pick_place::ChatGptResponse> should match
// service_traits::DataType< ::move_pick_place::ChatGpt >
template<>
struct DataType< ::move_pick_place::ChatGptResponse>
{
  static const char* value()
  {
    return DataType< ::move_pick_place::ChatGpt >::value();
  }
  static const char* value(const ::move_pick_place::ChatGptResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MOVE_PICK_PLACE_MESSAGE_CHATGPT_H
