// Generated by gencpp from file chatgpt_connector/ChatGpt.msg
// DO NOT EDIT!


#ifndef CHATGPT_CONNECTOR_MESSAGE_CHATGPT_H
#define CHATGPT_CONNECTOR_MESSAGE_CHATGPT_H

#include <ros/service_traits.h>


#include <chatgpt_connector/ChatGptRequest.h>
#include <chatgpt_connector/ChatGptResponse.h>


namespace chatgpt_connector
{

struct ChatGpt
{

typedef ChatGptRequest Request;
typedef ChatGptResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ChatGpt
} // namespace chatgpt_connector


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::chatgpt_connector::ChatGpt > {
  static const char* value()
  {
    return "e0e4e53d8b56a3ee57408d4081b2c754";
  }

  static const char* value(const ::chatgpt_connector::ChatGpt&) { return value(); }
};

template<>
struct DataType< ::chatgpt_connector::ChatGpt > {
  static const char* value()
  {
    return "chatgpt_connector/ChatGpt";
  }

  static const char* value(const ::chatgpt_connector::ChatGpt&) { return value(); }
};


// service_traits::MD5Sum< ::chatgpt_connector::ChatGptRequest> should match
// service_traits::MD5Sum< ::chatgpt_connector::ChatGpt >
template<>
struct MD5Sum< ::chatgpt_connector::ChatGptRequest>
{
  static const char* value()
  {
    return MD5Sum< ::chatgpt_connector::ChatGpt >::value();
  }
  static const char* value(const ::chatgpt_connector::ChatGptRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::chatgpt_connector::ChatGptRequest> should match
// service_traits::DataType< ::chatgpt_connector::ChatGpt >
template<>
struct DataType< ::chatgpt_connector::ChatGptRequest>
{
  static const char* value()
  {
    return DataType< ::chatgpt_connector::ChatGpt >::value();
  }
  static const char* value(const ::chatgpt_connector::ChatGptRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::chatgpt_connector::ChatGptResponse> should match
// service_traits::MD5Sum< ::chatgpt_connector::ChatGpt >
template<>
struct MD5Sum< ::chatgpt_connector::ChatGptResponse>
{
  static const char* value()
  {
    return MD5Sum< ::chatgpt_connector::ChatGpt >::value();
  }
  static const char* value(const ::chatgpt_connector::ChatGptResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::chatgpt_connector::ChatGptResponse> should match
// service_traits::DataType< ::chatgpt_connector::ChatGpt >
template<>
struct DataType< ::chatgpt_connector::ChatGptResponse>
{
  static const char* value()
  {
    return DataType< ::chatgpt_connector::ChatGpt >::value();
  }
  static const char* value(const ::chatgpt_connector::ChatGptResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CHATGPT_CONNECTOR_MESSAGE_CHATGPT_H
